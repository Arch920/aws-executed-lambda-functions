Demo 1:

import boto3
client = boto3.client('sns')
def lambda_handler(event, context):
    topic_arn = 'arn:aws:sns:eu-west-2:899937401816:Instance-Alert_Topic'
    message = 'Instance stop please look on'
    client.publish(TopicArn=topic_arn,Message=message)
    # TODO implement
    return {
        'statusCode': 200,
        'body': json.dumps('Hello from Lambda!')
    }


Demo 2: 

import json
import boto3
from pprint import pprint

def lambda_handler(event, context):
    client = boto3.client("ec2")
    status = client.describe_instance_status(IncludeAllInstances = True)
    #pprint(status)
    for i in status["InstanceStatuses"]:
        print("\n AvailabilityZone : ", i["AvailabilityZone"])
        print("\n InstanceId : ", i["InstanceId"])
    
    print("\n InstanceState : ", i["InstanceState"])
        print("\n InstanceStatus : ", i["InstanceStatus"])
        print("\n SystemStatus : ", i["SystemStatus"])
        print("\n")
    

    # TODO implement
    return {
        'statusCode': 200,
        'body': json.dumps('Lambda is checking. . . . Please Wait!')
    }


Demo 3 : 

import json
import boto3
import re


def lambda_handler(event, context):
    client = boto3.client("ec2")
    #s3 = boto3.client("s3")

    # fetch information about all the instances
    status = client.describe_instances()
    
    print(status) 
    print('*' * 10)

    for i in status["Reservations"]:
        instance_details = i["Instances"][0]
        if instance_details["State"]["Name"].lower() in ["shutting-down","stopped","stopping","terminated",]:
            print("InstanceId: ", instance_details["InstanceId"])
            print("Instance state: ", instance_details["State"]["Name"].lower())
            print("Launch time: ", instance_details["LaunchTime"])
            print("State change reason: ", instance_details["StateTransitionReason"])
            print("State change Time: ", re.findall("\((.*?) *\)", instance_details["StateTransitionReason"]))
            print(instance_details["InstanceId"] + " is stopped")
            print("\n")
        elif instance_details["State"]["Name"].lower() in ["running"]:
          print("InstanceId: ", instance_details["InstanceId"])
          print("Launch time: ", instance_details["LaunchTime"])
          print(instance_details["InstanceId"] + " is running")

	# TODO implement
    return {
        'statusCode': 200,
        'body': json.dumps('Lambda is checking. . . . Please Wait!')
    }
